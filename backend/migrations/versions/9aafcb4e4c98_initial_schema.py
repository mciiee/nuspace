"""initial schema

Revision ID: 9aafcb4e4c98
Revises: 
Create Date: 2025-10-17 11:26:43.615695

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9aafcb4e4c98'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('registrar_id', sa.Integer(), nullable=False),
    sa.Column('course_code', sa.String(length=128), nullable=False),
    sa.Column('pre_req', sa.String(length=2048), nullable=True),
    sa.Column('anti_req', sa.String(length=2048), nullable=True),
    sa.Column('co_req', sa.String(length=2048), nullable=True),
    sa.Column('level', sa.String(length=128), nullable=False),
    sa.Column('school', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=4096), nullable=True),
    sa.Column('department', sa.String(length=512), nullable=True),
    sa.Column('title', sa.String(length=512), nullable=True),
    sa.Column('credits', sa.Integer(), nullable=True),
    sa.Column('term', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_courses_course_code'), 'courses', ['course_code'], unique=False)
    op.create_index(op.f('ix_courses_level'), 'courses', ['level'], unique=False)
    op.create_index(op.f('ix_courses_registrar_id'), 'courses', ['registrar_id'], unique=False)
    op.create_index(op.f('ix_courses_school'), 'courses', ['school'], unique=False)
    op.create_index(op.f('ix_courses_term'), 'courses', ['term'], unique=False)
    op.create_table('departments',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('grade_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_code', sa.String(length=128), nullable=False),
    sa.Column('course_title', sa.String(length=512), nullable=True),
    sa.Column('section', sa.String(length=64), nullable=True),
    sa.Column('term', sa.String(length=32), nullable=True),
    sa.Column('grades_count', sa.Integer(), nullable=True),
    sa.Column('avg_gpa', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('std_dev', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('median_gpa', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('pct_A', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('pct_B', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('pct_C', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('pct_D', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('pct_F', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('pct_P', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('pct_I', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('pct_AU', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('pct_W_AW', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('letters_count', sa.Integer(), nullable=True),
    sa.Column('faculty', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_grade_reports_course_code'), 'grade_reports', ['course_code'], unique=False)
    op.create_index(op.f('ix_grade_reports_faculty'), 'grade_reports', ['faculty'], unique=False)
    op.create_index(op.f('ix_grade_reports_term'), 'grade_reports', ['term'], unique=False)
    op.create_table('media',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('mime_type', sa.String(), nullable=False),
    sa.Column('entity_type', sa.Enum('products', 'community_events', 'communities', 'community_posts', 'reviews', 'community_comments', 'grade_reports', 'courses', 'tickets', 'messages', name='entity_type'), nullable=False),
    sa.Column('entity_id', sa.BigInteger(), nullable=False),
    sa.Column('media_format', sa.Enum('banner', 'carousel', 'profile', name='media_format'), nullable=False),
    sa.Column('media_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_media_entity_id'), 'media', ['entity_id'], unique=False)
    op.create_index(op.f('ix_media_entity_type'), 'media', ['entity_type'], unique=False)
    op.create_index(op.f('ix_media_media_format'), 'media', ['media_format'], unique=False)
    op.create_index(op.f('ix_media_name'), 'media', ['name'], unique=True)
    op.create_table('users',
    sa.Column('sub', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('default', 'admin', 'boss', 'capo', 'soldier', 'community_admin', name='userrole'), nullable=False),
    sa.Column('scope', sa.Enum('allowed', 'banned', name='userscope'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('picture', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=True),
    sa.Column('department_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('sub')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    op.create_index(op.f('ix_users_sub'), 'users', ['sub'], unique=True)
    op.create_index(op.f('ix_users_surname'), 'users', ['surname'], unique=False)
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    op.create_table('communities',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('club', 'university', 'organization', name='community_type'), nullable=False),
    sa.Column('category', sa.Enum('academic', 'professional', 'recreational', 'cultural', 'sports', 'social', 'art', name='community_category'), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('recruitment_status', sa.Enum('open', 'closed', 'upcoming', name='community_recruitment_status'), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('recruitment_link', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('established', sa.Date(), nullable=False),
    sa.Column('head', sa.String(), nullable=True),
    sa.Column('telegram_url', sa.String(), nullable=True),
    sa.Column('instagram_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['head'], ['users.sub'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_communities_category'), 'communities', ['category'], unique=False)
    op.create_index(op.f('ix_communities_created_at'), 'communities', ['created_at'], unique=False)
    op.create_index(op.f('ix_communities_established'), 'communities', ['established'], unique=False)
    op.create_index(op.f('ix_communities_head'), 'communities', ['head'], unique=False)
    op.create_index(op.f('ix_communities_name'), 'communities', ['name'], unique=False)
    op.create_index(op.f('ix_communities_recruitment_status'), 'communities', ['recruitment_status'], unique=False)
    op.create_index(op.f('ix_communities_type'), 'communities', ['type'], unique=False)
    op.create_index(op.f('ix_communities_verified'), 'communities', ['verified'], unique=False)
    op.create_table('course_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('student_sub', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_sub'], ['users.sub'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_id', 'student_sub', name='uq_course_templates_course_student')
    )
    op.create_index(op.f('ix_course_templates_course_id'), 'course_templates', ['course_id'], unique=False)
    op.create_index(op.f('ix_course_templates_id'), 'course_templates', ['id'], unique=False)
    op.create_index(op.f('ix_course_templates_student_sub'), 'course_templates', ['student_sub'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('notification_source', sa.String(), nullable=False),
    sa.Column('receiver_sub', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('tg_id', sa.BigInteger(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['receiver_sub'], ['users.sub'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('price', sa.BigInteger(), nullable=False),
    sa.Column('user_sub', sa.String(), nullable=False),
    sa.Column('category', sa.Enum('books', 'electronics', 'clothing', 'furniture', 'appliances', 'sports', 'stationery', 'art_supplies', 'beauty', 'services', 'food', 'tickets', 'transport', 'others', name='product_category'), nullable=False),
    sa.Column('condition', sa.Enum('new', 'like_new', 'used', name='product_condition'), nullable=False),
    sa.Column('status', sa.Enum('inactive', 'active', name='product_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_sub'], ['users.sub'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.create_table('reviews',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('reviewable_type', sa.Enum('products', 'club_events', name='reviewable_type'), nullable=False),
    sa.Column('entity_id', sa.BigInteger(), nullable=False),
    sa.Column('user_sub', sa.String(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('owner_type', sa.Enum('users', 'clubs', name='owner_type'), nullable=False),
    sa.Column('owner_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_sub'], ['users.sub'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reviews_entity_id'), 'reviews', ['entity_id'], unique=False)
    op.create_table('student_courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_sub', sa.String(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_sub'], ['users.sub'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_sub', 'course_id', name='uq_student_courses_student_course_unique')
    )
    op.create_index(op.f('ix_student_courses_course_id'), 'student_courses', ['course_id'], unique=False)
    op.create_index(op.f('ix_student_courses_id'), 'student_courses', ['id'], unique=False)
    op.create_index(op.f('ix_student_courses_student_sub'), 'student_courses', ['student_sub'], unique=False)
    op.create_table('tickets',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('author_sub', sa.String(), nullable=True),
    sa.Column('category', sa.Enum('academic', 'administrative', 'technical', 'complaint', 'suggestion', 'other', name='ticket_category'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('body', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('open', 'in_progress', 'closed', 'resolved', name='ticket_status'), nullable=False),
    sa.Column('is_anonymous', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['author_sub'], ['users.sub'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tickets_author_sub'), 'tickets', ['author_sub'], unique=False)
    op.create_index(op.f('ix_tickets_category'), 'tickets', ['category'], unique=False)
    op.create_index(op.f('ix_tickets_created_at'), 'tickets', ['created_at'], unique=False)
    op.create_index(op.f('ix_tickets_status'), 'tickets', ['status'], unique=False)
    op.create_table('community_members',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('community_id', sa.BigInteger(), nullable=False),
    sa.Column('user_sub', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_sub'], ['users.sub'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('community_post_tags',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('community_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversations',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('ticket_id', sa.BigInteger(), nullable=False),
    sa.Column('sg_member_sub', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('active', 'archived', name='conversation_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['sg_member_sub'], ['users.sub'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversations_created_at'), 'conversations', ['created_at'], unique=False)
    op.create_index(op.f('ix_conversations_sg_member_sub'), 'conversations', ['sg_member_sub'], unique=False)
    op.create_index(op.f('ix_conversations_status'), 'conversations', ['status'], unique=False)
    op.create_index(op.f('ix_conversations_ticket_id'), 'conversations', ['ticket_id'], unique=False)
    op.create_table('course_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_course_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=256), nullable=False),
    sa.Column('total_weight_pct', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('max_score', sa.Numeric(precision=7, scale=2), nullable=True),
    sa.Column('obtained_score', sa.Numeric(precision=7, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['student_course_id'], ['student_courses.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_course_items_id'), 'course_items', ['id'], unique=False)
    op.create_index(op.f('ix_course_items_student_course_id'), 'course_items', ['student_course_id'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('community_id', sa.BigInteger(), nullable=True),
    sa.Column('creator_sub', sa.String(), nullable=True),
    sa.Column('policy', sa.Enum('registration', 'open', name='event_policy'), nullable=False),
    sa.Column('registration_link', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('place', sa.String(), nullable=False),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('scope', sa.Enum('personal', 'community', name='event_scope'), nullable=False),
    sa.Column('type', sa.Enum('academic', 'professional', 'recreational', 'cultural', 'sports', 'social', 'art', 'recruitment', name='event_type'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', 'cancelled', name='event_status'), nullable=False),
    sa.Column('tag', sa.Enum('featured', 'promotional', 'regular', 'charity', name='event_tag'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['creator_sub'], ['users.sub'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_community_id'), 'events', ['community_id'], unique=False)
    op.create_index(op.f('ix_events_creator_sub'), 'events', ['creator_sub'], unique=False)
    op.create_index(op.f('ix_events_end_datetime'), 'events', ['end_datetime'], unique=False)
    op.create_index(op.f('ix_events_policy'), 'events', ['policy'], unique=False)
    op.create_index(op.f('ix_events_scope'), 'events', ['scope'], unique=False)
    op.create_index(op.f('ix_events_start_datetime'), 'events', ['start_datetime'], unique=False)
    op.create_index(op.f('ix_events_status'), 'events', ['status'], unique=False)
    op.create_index(op.f('ix_events_type'), 'events', ['type'], unique=False)
    op.create_table('product_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_sub', sa.String(), nullable=False),
    sa.Column('product_id', sa.BigInteger(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_sub'], ['users.sub'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('review_replies',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('review_id', sa.BigInteger(), nullable=False),
    sa.Column('user_sub', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['review_id'], ['reviews.id'], ),
    sa.ForeignKeyConstraint(['user_sub'], ['users.sub'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('review_id')
    )
    op.create_table('template_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=256), nullable=False),
    sa.Column('total_weight_pct', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['template_id'], ['course_templates.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_template_items_id'), 'template_items', ['id'], unique=False)
    op.create_index(op.f('ix_template_items_template_id'), 'template_items', ['template_id'], unique=False)
    op.create_table('ticket_access',
    sa.Column('ticket_id', sa.BigInteger(), nullable=False),
    sa.Column('user_sub', sa.String(), nullable=False),
    sa.Column('permission', sa.Enum('VIEW', 'ASSIGN', 'DELEGATE', name='permission_type'), nullable=False),
    sa.Column('granted_by_sub', sa.String(), nullable=True),
    sa.Column('granted_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['granted_by_sub'], ['users.sub'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_sub'], ['users.sub'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ticket_id', 'user_sub', 'permission')
    )
    op.create_table('community_posts',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('community_id', sa.BigInteger(), nullable=False),
    sa.Column('user_sub', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('tag_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('from_community', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['community_post_tags.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_sub'], ['users.sub'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_posts_community_id'), 'community_posts', ['community_id'], unique=False)
    op.create_index(op.f('ix_community_posts_created_at'), 'community_posts', ['created_at'], unique=False)
    op.create_index(op.f('ix_community_posts_tag_id'), 'community_posts', ['tag_id'], unique=False)
    op.create_index(op.f('ix_community_posts_user_sub'), 'community_posts', ['user_sub'], unique=False)
    op.create_table('event_collaborators',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('collaborator_type', sa.Enum('user', 'community', name='collaborator_type'), nullable=False),
    sa.Column('user_sub', sa.String(), nullable=True),
    sa.Column('community_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_sub'], ['users.sub'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_collaborators_community_id'), 'event_collaborators', ['community_id'], unique=False)
    op.create_index(op.f('ix_event_collaborators_event_id'), 'event_collaborators', ['event_id'], unique=False)
    op.create_index(op.f('ix_event_collaborators_user_sub'), 'event_collaborators', ['user_sub'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('conversation_id', sa.BigInteger(), nullable=False),
    sa.Column('sender_sub', sa.String(), nullable=True),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('is_from_sg_member', sa.Boolean(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_sub'], ['users.sub'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_conversation_id'), 'messages', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_messages_sender_sub'), 'messages', ['sender_sub'], unique=False)
    op.create_index(op.f('ix_messages_sent_at'), 'messages', ['sent_at'], unique=False)
    op.create_table('community_comments',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('post_id', sa.BigInteger(), nullable=False),
    sa.Column('parent_id', sa.BigInteger(), nullable=True),
    sa.Column('user_sub', sa.String(), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['community_comments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['post_id'], ['community_posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_sub'], ['users.sub'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_comments_created_at'), 'community_comments', ['created_at'], unique=False)
    op.create_index(op.f('ix_community_comments_deleted_at'), 'community_comments', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_community_comments_parent_id'), 'community_comments', ['parent_id'], unique=False)
    op.create_index(op.f('ix_community_comments_post_id'), 'community_comments', ['post_id'], unique=False)
    op.create_index(op.f('ix_community_comments_user_sub'), 'community_comments', ['user_sub'], unique=False)
    op.create_table('message_read_status',
    sa.Column('message_id', sa.BigInteger(), nullable=False),
    sa.Column('user_sub', sa.String(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_sub'], ['users.sub'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('message_id', 'user_sub')
    )
    op.create_index(op.f('ix_message_read_status_read_at'), 'message_read_status', ['read_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_message_read_status_read_at'), table_name='message_read_status')
    op.drop_table('message_read_status')
    op.drop_index(op.f('ix_community_comments_user_sub'), table_name='community_comments')
    op.drop_index(op.f('ix_community_comments_post_id'), table_name='community_comments')
    op.drop_index(op.f('ix_community_comments_parent_id'), table_name='community_comments')
    op.drop_index(op.f('ix_community_comments_deleted_at'), table_name='community_comments')
    op.drop_index(op.f('ix_community_comments_created_at'), table_name='community_comments')
    op.drop_table('community_comments')
    op.drop_index(op.f('ix_messages_sent_at'), table_name='messages')
    op.drop_index(op.f('ix_messages_sender_sub'), table_name='messages')
    op.drop_index(op.f('ix_messages_conversation_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_event_collaborators_user_sub'), table_name='event_collaborators')
    op.drop_index(op.f('ix_event_collaborators_event_id'), table_name='event_collaborators')
    op.drop_index(op.f('ix_event_collaborators_community_id'), table_name='event_collaborators')
    op.drop_table('event_collaborators')
    op.drop_index(op.f('ix_community_posts_user_sub'), table_name='community_posts')
    op.drop_index(op.f('ix_community_posts_tag_id'), table_name='community_posts')
    op.drop_index(op.f('ix_community_posts_created_at'), table_name='community_posts')
    op.drop_index(op.f('ix_community_posts_community_id'), table_name='community_posts')
    op.drop_table('community_posts')
    op.drop_table('ticket_access')
    op.drop_index(op.f('ix_template_items_template_id'), table_name='template_items')
    op.drop_index(op.f('ix_template_items_id'), table_name='template_items')
    op.drop_table('template_items')
    op.drop_table('review_replies')
    op.drop_table('product_reports')
    op.drop_index(op.f('ix_events_type'), table_name='events')
    op.drop_index(op.f('ix_events_status'), table_name='events')
    op.drop_index(op.f('ix_events_start_datetime'), table_name='events')
    op.drop_index(op.f('ix_events_scope'), table_name='events')
    op.drop_index(op.f('ix_events_policy'), table_name='events')
    op.drop_index(op.f('ix_events_end_datetime'), table_name='events')
    op.drop_index(op.f('ix_events_creator_sub'), table_name='events')
    op.drop_index(op.f('ix_events_community_id'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_course_items_student_course_id'), table_name='course_items')
    op.drop_index(op.f('ix_course_items_id'), table_name='course_items')
    op.drop_table('course_items')
    op.drop_index(op.f('ix_conversations_ticket_id'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_status'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_sg_member_sub'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_created_at'), table_name='conversations')
    op.drop_table('conversations')
    op.drop_table('community_post_tags')
    op.drop_table('community_members')
    op.drop_index(op.f('ix_tickets_status'), table_name='tickets')
    op.drop_index(op.f('ix_tickets_created_at'), table_name='tickets')
    op.drop_index(op.f('ix_tickets_category'), table_name='tickets')
    op.drop_index(op.f('ix_tickets_author_sub'), table_name='tickets')
    op.drop_table('tickets')
    op.drop_index(op.f('ix_student_courses_student_sub'), table_name='student_courses')
    op.drop_index(op.f('ix_student_courses_id'), table_name='student_courses')
    op.drop_index(op.f('ix_student_courses_course_id'), table_name='student_courses')
    op.drop_table('student_courses')
    op.drop_index(op.f('ix_reviews_entity_id'), table_name='reviews')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_table('products')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_course_templates_student_sub'), table_name='course_templates')
    op.drop_index(op.f('ix_course_templates_id'), table_name='course_templates')
    op.drop_index(op.f('ix_course_templates_course_id'), table_name='course_templates')
    op.drop_table('course_templates')
    op.drop_index(op.f('ix_communities_verified'), table_name='communities')
    op.drop_index(op.f('ix_communities_type'), table_name='communities')
    op.drop_index(op.f('ix_communities_recruitment_status'), table_name='communities')
    op.drop_index(op.f('ix_communities_name'), table_name='communities')
    op.drop_index(op.f('ix_communities_head'), table_name='communities')
    op.drop_index(op.f('ix_communities_established'), table_name='communities')
    op.drop_index(op.f('ix_communities_created_at'), table_name='communities')
    op.drop_index(op.f('ix_communities_category'), table_name='communities')
    op.drop_table('communities')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_index(op.f('ix_users_surname'), table_name='users')
    op.drop_index(op.f('ix_users_sub'), table_name='users')
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_media_name'), table_name='media')
    op.drop_index(op.f('ix_media_media_format'), table_name='media')
    op.drop_index(op.f('ix_media_entity_type'), table_name='media')
    op.drop_index(op.f('ix_media_entity_id'), table_name='media')
    op.drop_table('media')
    op.drop_index(op.f('ix_grade_reports_term'), table_name='grade_reports')
    op.drop_index(op.f('ix_grade_reports_faculty'), table_name='grade_reports')
    op.drop_index(op.f('ix_grade_reports_course_code'), table_name='grade_reports')
    op.drop_table('grade_reports')
    op.drop_table('departments')
    op.drop_index(op.f('ix_courses_term'), table_name='courses')
    op.drop_index(op.f('ix_courses_school'), table_name='courses')
    op.drop_index(op.f('ix_courses_registrar_id'), table_name='courses')
    op.drop_index(op.f('ix_courses_level'), table_name='courses')
    op.drop_index(op.f('ix_courses_course_code'), table_name='courses')
    op.drop_table('courses')
    # ### end Alembic commands ###
