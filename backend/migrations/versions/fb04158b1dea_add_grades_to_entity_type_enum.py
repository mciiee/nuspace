"""add_grades_to_entity_type_enum

Revision ID: fb04158b1dea
Revises: 0001_create_grade_reports_table
Create Date: 2025-09-05 15:48:30.506523

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fb04158b1dea'
down_revision: Union[str, Sequence[str], None] = '0001_create_grade_reports_table'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('product_reports', 'product_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    
    # Add 'grades' to entity_type enum
    op.execute("ALTER TYPE entity_type ADD VALUE 'grade_reports'")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('product_reports', 'product_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    
    # Note: PostgreSQL doesn't support removing enum values directly
    # This would require recreating the enum type and updating all references
    # For now, we'll leave the 'grades' value in the enum
    # ### end Alembic commands ###
