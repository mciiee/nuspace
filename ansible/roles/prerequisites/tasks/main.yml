---
- name: Check if git is installed
  ansible.builtin.command: git --version
  register: git_check
  failed_when: false
  changed_when: false

- name: Install git if not present
  ansible.builtin.package:
    name: git
    state: present
  when: git_check.rc != 0

- name: Check if docker is installed
  ansible.builtin.command: docker --version
  register: docker_check
  failed_when: false
  changed_when: false

- name: Install docker if not present
  ansible.builtin.apt:
    name:
      - docker.io
    state: present
    update_cache: yes
  when: docker_check.rc != 0


- name: Ensure docker service is running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes

- name: Check if Docker Compose v2 subcommand is available
  ansible.builtin.command: docker compose version
  register: docker_compose_subcommand_check
  failed_when: false
  changed_when: false

- name: Check if docker-compose CLI is available
  ansible.builtin.command: docker-compose version
  register: docker_compose_cli_check
  failed_when: false
  changed_when: false

- name: Install docker-compose if no compose is available
  ansible.builtin.apt:
    name: docker-compose
    state: present
    update_cache: yes
  when: docker_compose_subcommand_check.rc != 0 and docker_compose_cli_check.rc != 0

- name: Set compose_cmd fact
  ansible.builtin.set_fact:
    compose_cmd: "{{ 'docker compose' if docker_compose_subcommand_check.rc == 0 else ('docker-compose' if docker_compose_cli_check.rc == 0 else 'docker-compose') }}"

- name: Ensure ansible service account user is in docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Check if gcloud is installed
  ansible.builtin.command: gcloud --version
  register: gcloud_check
  failed_when: false
  changed_when: false

- name: Install Google Cloud SDK if not present
  ansible.builtin.shell: |
    curl -sSL https://sdk.cloud.google.com | bash
    echo 'source /root/google-cloud-sdk/path.bash.inc' >> /root/.bashrc
    echo 'source /root/google-cloud-sdk/completion.bash.inc' >> /root/.bashrc
  args:
    executable: /bin/bash
  when: gcloud_check.rc != 0

- name: Configure gcloud to use VM service account and project
  ansible.builtin.shell: |
    export PATH="/root/google-cloud-sdk/bin:$PATH"
    gcloud config set project {{ gcp_project }}
  args:
    executable: /bin/bash

- name: Ensure OS Login user exists and has proper permissions
  ansible.builtin.shell: |
    CURRENT_USER=$(whoami)
    echo "Current user: $CURRENT_USER"
    if ! id "$CURRENT_USER" &>/dev/null; then
      echo "Creating user $CURRENT_USER"
      useradd -m -s /bin/bash "$CURRENT_USER"
    fi
    if ! groups "$CURRENT_USER" | grep -q sudo; then
      usermod -aG sudo "$CURRENT_USER"
    fi
    if ! groups "$CURRENT_USER" | grep -q docker; then
      usermod -aG docker "$CURRENT_USER"
    fi
    echo "User $CURRENT_USER configured with sudo and docker access"
  args:
    executable: /bin/bash


