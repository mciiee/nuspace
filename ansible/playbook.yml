---
- name: Deploy Docker Containers
  hosts: webservers
  become: true
  vars:
    docker_username: "{{ docker_user }}"
    docker_password: "{{ docker_pass }}"
    ansible_user: "{{ ansible_user_var }}"
    image_tag: "{{ docker_image_tag }}"

  tasks:
    - name: Pull latest changes from git repository
      ansible.builtin.git:
        repo: "https://github.com/ulanpy/nuspace.git"
        dest: /opt/nuspace
        version: main
        force: yes

    - name: Log in to Docker Hub
      community.docker.docker_login:
        username: "{{ docker_username }}"
        password: "{{ docker_password }}"

    - name: Pull backend image for migrations
      ansible.builtin.command: >
        docker compose -f /opt/nuspace/infra/prod.docker-compose.yml
        pull fastapi
      environment:
        DOCKER_IMAGE_TAG: "{{ image_tag }}"

    - name: Run DB migrations (alembic upgrade head)
      ansible.builtin.command: >
        docker compose -f /opt/nuspace/infra/prod.docker-compose.yml
        run --rm migrate
      environment:
        DOCKER_IMAGE_TAG: "{{ image_tag }}"

    - name: Ensure deployment user is in the docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Ensure deployment user is in the devs group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: devs
        append: yes

    - name: Pull new images & recreate services with Docker Compose
      community.docker.docker_compose_v2:
        project_src: /opt/nuspace/infra
        files:
          - prod.docker-compose.yml
        pull: always
        recreate: always
        state: present
      environment:
        DOCKER_IMAGE_TAG: "{{ image_tag }}"

    - name: Prune all unused Docker assets
      ansible.builtin.command: docker system prune -a -f
      changed_when: false

    - name: Ensure DOCKER_IMAGE_TAG is set correctly in user's .bashrc
      ansible.builtin.lineinfile:
        path: "/home/{{ ansible_user }}/.bashrc"
        regexp: "^export DOCKER_IMAGE_TAG="
        line: "export DOCKER_IMAGE_TAG={{ image_tag }}"
        create: yes
